// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

  model Location {
    id        Int   @id @default(autoincrement())
    lat              String
    long             String
    locality         String
    country          String
    circuit    Circuit     @relation(fields: [circuitId], references: [id])
    circuitId  Int
  }
  
  model Circuit {
    id     Int     @id @default(autoincrement())
    circuitId            String
    name          String
    round         String
    url           String
    locations     Location[]
    races          Race[]
    results     Results? @relation(fields: [resultId], references: [id])
    resultId   Int

  }
  
  model Race {
    id Int    @id @default(autoincrement())
    name      String
    season    String
    round     String
    url       String
    date      String
    time      String
    circuit    Circuit     @relation(fields: [circuitId], references: [id])
    circuitId  Int

  }
  
  model Driver {
    id   Int   @id @default(autoincrement())
    driverId          String
    code        String
    url         String
    givenName   String
    familyName  String
    number      String
    nationality String
    dateOfBirth String
    results     Results? @relation(fields: [resultId], references: [id])
    resultId   Int
  }
  
  model Constructor {
    id   Int   @id @default(autoincrement())
    constructorId          String
    name            String
    nationality     String
    url             String
    results     Results? @relation(fields: [resultId], references: [id])
    resultId   Int
  }
  
  model RaceTime {
    id Int   @id @default(autoincrement())
    time      String
    millis    String
    results     Results? @relation(fields: [resultId], references: [id])
    resultId   Int
  }
  
  model FastestLap {
    id    Int   @id @default(autoincrement())
    time         String
    rank         String
    lap          String
    averageSpeed String
    units        String
    results     Results? @relation(fields: [resultId], references: [id])
    resultId   Int
  }
  
  model Results {
    id          Int        @id @default(autoincrement())
    driver      Driver[]
    constructors Constructor[]
    fastestLap  FastestLap[]
    grid        String
    laps        String
    status      String
    time        RaceTime[]
    number        String
    position      String
    positionText String
    points        String
    circuit        Circuit[]
  }
